openapi: 3.0.0
info:
  title: Sports Nutrition Planner API
  version: 1.0.0
  description: API documentation for the Sports Nutrition Planner app
servers:
  - url: http://localhost:3000
paths:
  /questions:
    get:
      summary: Retrieve a list of questions
      responses:
        '200':
          description: Successfully retrieved list of questions
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Question'
        '500':
          description: Failed to retrieve questions
  /coach-questions:
    get:
      summary: Get a list of questions for coaches
      description: Retrieves a JSON object containing a list of questions that are meant to be answered by coaches.
      responses:
        '200':
          description: A list of questions for coaches
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - questionName
                        - question
                        - questionType
                      properties:
                        id:
                          type: integer
                          description: The question's unique identifier.
                        questionName:
                          type: string
                          description: A name identifier for the question.
                        question:
                          type: string
                          description: The text of the question.
                        questionType:
                          type: string
                          description: The type of response expected for the question (e.g., text, checkbox, number).
                        options:
                          type: array
                          items:
                            type: string
                          description: Possible options for the question (applicable to types like 'checkbox' or 'radio').
        '500':
          description: Server error
    /save-user:
    post:
      summary: Save user and related data
      description: Saves user information and related data to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                userRoleId:
                  type: integer
                userData:
                  type: object
              required:
                - firstName
                - lastName
                - email
                - password
                - userRoleId
                - userData
      responses:
        '200':
          description: User and related data saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      userInfo:
                        $ref: '#/components/schemas/UserData'
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Failed to save user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
  /get-user/{id}:
    get:
      summary: Get user by ID
      description: Retrieves user information and related data by user ID.
      parameters:
        - in: path
          name: id
          required: true
          description: User ID
          schema:
            type: string
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Failed to retrieve user info
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
  /get-all-users:
    get:
      summary: Get all users
      description: Retrieves information of all users.
      responses:
        '200':
          description: Users information retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Failed to retrieve all users
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
  /save-user:
    post:
      summary: Save user and related data
      description: Saves user information and related data to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                userRoleId:
                  type: integer
                userData:
                  type: object
              required:
                - firstName
                - lastName
                - email
                - password
                - userRoleId
                - userData
      responses:
        '200':
          description: User and related data saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      userInfo:
                        $ref: '#/components/schemas/UserData'
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Failed to save user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string

components:
  schemas:
    Question:
      type: object
      required:
        - id
        - questionName
        - question
        - questionType
      properties:
        id:
          type: integer
          description: The question ID.
        questionName:
          type: string
          description: The name of the question.
        question:
          type: string
          description: The question text.
        questionType:
          type: string
          description: The type of question (e.g., radio, text).
        options:
          type: array
          items:
            type: string
          description: The available options for the question.
    User:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        userRoleId:
          type: integer
    UserData:
      type: object
      properties:
        userId:
          type: string
    UserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        userData:
          $ref: '#/components/schemas/UserData'
